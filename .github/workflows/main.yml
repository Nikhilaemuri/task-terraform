name: Manual workflow
on:
  workflow_call:
  push:
    branches: [ main ]
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest 
    steps: 
      - name: Checkout Codebase
        uses: actions/checkout@v2
        
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1      
        with:
        # role-to-assume: arn:aws:iam::779527285137:role/AWSdevopscerttaskrole
         aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
         aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
         aws-region: us-east-1
      - name: setup terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: '1.1.2'
          
      - name: terraform init
        run: terraform init --input=false
      #- name: terraform format
       # run: terraform fmt -check
      - name: terraform validate
        run: terraform validate
              # Note: It is recommended to set up a required "strict" status check in your repository for "Terraform Cloud". See the documentation on "strict" required status checks for more information: https://help.github.com/en/github/administering-a-repository/types-of-required-status-checks
     
      - name: terraform plan
        run: terraform plan
      - name: terraform apply
        run: terraform apply -auto-approve
      



#   create_cluster:
#     uses: Nikhilaemuri/task-terraform/.github/workflows/main.yml@main  
#     secrets:
#       AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
#       AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    
  Build_and_Push_Image_to_ECR:
    name: build and push
    needs: build
    runs-on: ubuntu-latest

    steps:    
    - name: Checkout
      uses: actions/checkout@v2

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build and push the image to Amazon ECR
      id: build-image
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: ${{ secrets.REPO_NAME }}
        IMAGE_TAG: "latest"

      run: |
        # Build a docker container and push it to ECR 
        echo "ECR Login"
        aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin 779527285137.dkr.ecr.us-east-1.amazonaws.com
        docker build -t terraformtask Dockerfile1/helloworld.html/
        echo "tagging"
        docker tag terraformtask:latest 779527285137.dkr.ecr.us-east-1.amazonaws.com/terraformtask:latest
        echo "Pushing image to ECR..."
        docker push 779527285137.dkr.ecr.us-east-1.amazonaws.com/terraformtask:latest
        echo "::set-output name=image::$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG"
    
  Deployment_In_Dev_Environment:
    name: Deploying in Dev
    runs-on: ubuntu-latest
    needs: Build_and_Push_Image_to_ECR
    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1
       
    - name: Deploy into EKS  
      id:  deploy-image
      run: | 
        aws eks --region us-east-2 update-kubeconfig --name task
        helm upgrade --recreate-pods -i task /Dockerfile1/helloworld.html/task/

    
   
#   Deployment_In_Prod_Evironment:
#     name: Deployment in prod
#     runs-on: ubuntu-latest
#     environment: prod
#     needs: Deployment_In_Dev_Environment       
#     steps:
#     - name: Checkout
#       uses: actions/checkout@v2

#     - name: AWS Login For EKS
#       uses: aws-actions/configure-aws-credentials@v1 
#       with:
#         aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
#         aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}   
#         aws-region: us-east-1
    
#     - name: Deploy into EKS  
#       id: deploy-image
#       run: |
#         aws eks --region us-east-1 update-kubeconfig --name eks_tasks
#         helm upgrade --recreate-pods -i task 
       
  sonarqube:
   name: sonarqube
   needs: Deployment_In_Dev_Environment
   uses: Nikhilaemuri/sonarqube/.github/workflows/build.yml@main
   secrets:
      SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
        
